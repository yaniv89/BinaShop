@model BinaShop.Core.ViewModels.ProductManagerViewModel


@{
    ViewBag.Title = "עריכת מוצר";
}
<head>
    <link rel=stylesheet type="text/css" href="~/Content/ProductManagerEdit.css">
</head>
<div class="btn-link" style="text-align:right;">
    @Html.ActionLink("חזרה למוצרים", "Index")
</div>
<div class="container" style="text-align:-webkit-center;">
    <h2>עריכת מוצר</h2>


    @using (Html.BeginForm("Edit", "ProductManager", FormMethod.Post, new { encType = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Product.Id)

            <div class="col-sm-2">
                <img class="img-fluid" src="~/Content/ProductImages/@Model.Product.Image" />

            </div>
            <div class="col-sm-10">
                <div class="form-group">
                    @Html.LabelFor(model => model.Product.Name, htmlAttributes: new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.Product.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Product.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Product.Description, htmlAttributes: new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.Product.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Product.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Product.Price, htmlAttributes: new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.Product.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Product.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Product.Category, htmlAttributes: new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.DropDownListFor(model => model.Product.Category, new SelectList(Model.ProductCategories, "Category", "Category"), new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Product.Image, htmlAttributes: new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        <input type="file" id="file" name="file" class="form-control" />
                        
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="שמור שינויים" class="btn btn-default" style="background-color:#a3f5fa;"/>
                    </div>
                </div>
            </div>
        </div>
    }
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
